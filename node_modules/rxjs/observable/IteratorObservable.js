"use strict";var __extends=function(a,c){function e(){this.constructor=a}for(var f in c)c.hasOwnProperty(f)&&(a[f]=c[f]);a.prototype=null===c?Object.create(c):(e.prototype=c.prototype,new e)},root_1=require("rxjs/util/root"),Observable_1=require("rxjs/Observable"),iterator_1=require("rxjs/symbol/iterator"),IteratorObservable=function(a){function c(e,f){if(a.call(this),this.scheduler=f,null==e)throw new Error("iterator cannot be null.");this.iterator=getIterator(e)}return __extends(c,a),c.create=function(e,f){return new c(e,f)},c.dispatch=function(e){var f=e.index,g=e.hasError,h=e.iterator,j=e.subscriber;if(g)return void j.error(e.error);var k=h.next();return k.done?void j.complete():void(j.next(k.value),e.index=f+1,j.closed||this.schedule(e))},c.prototype._subscribe=function(e){var g=this,h=g.iterator,j=g.scheduler;if(j)return j.schedule(c.dispatch,0,{index:0,iterator:h,subscriber:e});do{var k=h.next();if(k.done){e.complete();break}else e.next(k.value);if(e.closed)break}while(!0)},c}(Observable_1.Observable);exports.IteratorObservable=IteratorObservable;var StringIterator=function(){function a(c,e,f){void 0===e&&(e=0),void 0===f&&(f=c.length),this.str=c,this.idx=e,this.len=f}return a.prototype[iterator_1.$$iterator]=function(){return this},a.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.str.charAt(this.idx++)}:{done:!0,value:void 0}},a}(),ArrayIterator=function(){function a(c,e,f){void 0===e&&(e=0),void 0===f&&(f=toLength(c)),this.arr=c,this.idx=e,this.len=f}return a.prototype[iterator_1.$$iterator]=function(){return this},a.prototype.next=function(){return this.idx<this.len?{done:!1,value:this.arr[this.idx++]}:{done:!0,value:void 0}},a}();function getIterator(a){var c=a[iterator_1.$$iterator];if(!c&&"string"==typeof a)return new StringIterator(a);if(!c&&void 0!==a.length)return new ArrayIterator(a);if(!c)throw new TypeError("object is not iterable");return a[iterator_1.$$iterator]()}var maxSafeInteger=Math.pow(2,53)-1;function toLength(a){var c=+a.length;return isNaN(c)?0:0!=c&&numberIsFinite(c)?(c=sign(c)*Math.floor(Math.abs(c)),0>=c?0:c>maxSafeInteger?maxSafeInteger:c):c}function numberIsFinite(a){return"number"==typeof a&&root_1.root.isFinite(a)}function sign(a){var c=+a;return 0==c?c:isNaN(c)?c:0>c?-1:1}